#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jan 30 16:44:28 2018

@author: fubao
"""


#84. Largest Rectangle in Histogram



'''
 
 Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.


Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].


The largest rectangle is shown in the shaded area, which has area = 10 unit.

For example,
Given heights = [2,1,5,6,2,3],
return 10.
'''


'''

  1st approach
  最基本的解法就是两重循环，遍历所有[i, j]，寻找其中最矮bar，得出矩形面积，时间复杂度为O(n^2)，不过这样的解法会得到TLE;

 一个简单的改进是，只对合适的右边界（峰顶），往左遍历面积，这个优化只是比较有效的剪枝，算法仍然是O(n^2)
 
 
 '''
 
 
 # 2nd use stack 
 
 # reference  https://aaronice.gitbooks.io/lintcode/content/data_structure/largest_rectangle_in_histogram.html
 #  http://www.informatik.uni-ulm.de/acm/Locals/2003/html/judge.html
 # o(n) time
 
class Solution(object):
    def largestRectangleArea(self, height):
        """
        :type heights: List[int]
        :rtype: int
        """
        # reference https://www.geeksforgeeks.org/largest-rectangle-under-histogram/
        
        height.append(0)
        stack = [-1]
        ans = 0
        for i in range(len(height)):
            while height[i] < height[stack[-1]]:
                h = height[stack.pop()]
                w = i - stack[-1] - 1
                ans = max(ans, h * w)
            stack.append(i)
        height.pop()
        return ans


# or divider and conquer  o(nlogn)
    # https://www.geeksforgeeks.org/largest-rectangular-area-in-a-histogram-set-1